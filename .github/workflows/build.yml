# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Check and Test

# This workflow should only be called from ci.yml which is triggered on
# the "pull_request" event type. We should never dispatch this workflow from
# a "pull_request_target" event.
on:
  workflow_call:
    inputs:
      is-trunk:
        description: "Is this a trunk build?"
        default: true
        type: boolean
      is-public-fork:
        description: "Is this CI run from a public fork?"
        default: true
        type: boolean

jobs:
  validate:
    runs-on: ubuntu-latest
    name: Compile and Check Java
    outputs:
      is-draft: ${{ steps.check-draft-pr.outputs.is-draft }}
    steps:
      - name: Env
        run: printenv
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      - name: Check for Draft PR
        id: check-draft-pr
        if: |
          github.event_name == 'pull_request' && 
          github.event.pull_request.draft
        run: echo "is-draft=true" >> "$GITHUB_OUTPUT"
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Setup Gradle
        uses: ./.github/actions/setup-gradle
        with:
          java-version: 23
          gradle-cache-read-only: ${{ !inputs.is-trunk }}
          gradle-cache-write-only: ${{ inputs.is-trunk }}
          develocity-access-key: ${{ secrets.DEVELOCITY_ACCESS_KEY }}
      - name: Compile and validate
        env:
          SCAN_ARG: ${{ inputs.is-public-fork && '--no-scan' || '--scan' }}
        # Gradle flags
        # --build-cache:  Let Gradle restore the build cache
        # --info:         For now, we'll generate lots of logs while setting up the GH Actions
        # --scan:         Publish the build scan. This will only work on PRs from apache/kafka and trunk
        # --no-scan:      For public fork PRs, we won't attempt to publish the scan
        run: |
          ./gradlew --build-cache --info $SCAN_ARG check siteDocTar -x test
      - name: Archive check reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: check-reports
          path: |
            **/build/**/*.html
          compression-level: 9
          if-no-files-found: ignore
      - name: Annotate checkstyle errors
        if: failure()
        run: python .github/scripts/checkstyle.py
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
      - name: Annotate Rat errors
        if: failure()
        run: python .github/scripts/rat.py
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
      - name: Check generated documentation
        # Check if there are any empty files under ./site-docs/generated, If any empty files are found, print an error 
        # message and list the empty files
        run: |
          tar zxvf core/build/distributions/kafka_2.13-$(./gradlew properties | grep version: | awk '{print $NF}' | head -n 1)-site-docs.tgz
          if find ./site-docs/generated -type f -exec grep -L "." {} \; | grep -q "."; then
            echo "One or more documentation files are empty!" >&2
            find ./site-docs/generated -type f -exec grep -L "." {} \; >&2
            exit 1
          fi

  test:
    needs: [validate]
    if: ${{ ! needs.validate.outputs.is-draft }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [ 23, 17 ]  # If we change these, make sure to adjust ci-complete.yml
    outputs:
      timed-out: ${{ (steps.junit-test.outputs.gradle-exitcode == '124' || steps.junit-quarantined-test.outputs.gradle-exitcode == '124') }}
    name: JUnit tests Java ${{ matrix.java }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Setup Gradle
        uses: ./.github/actions/setup-gradle
        with:
          java-version: ${{ matrix.java }}
          gradle-cache-read-only: ${{ !inputs.is-trunk }}
          gradle-cache-write-only: ${{ inputs.is-trunk }}
          develocity-access-key: ${{ secrets.DEVELOCITY_ACCESS_KEY }}

      - name: JUnit Quarantined Tests
        id: junit-quarantined-test
        uses: ./.github/actions/run-gradle
        with:
          test-task: quarantinedTest
          timeout-minutes: 180
          test-catalog-path: missing.txt
          build-scan-artifact-name: build-scan-quarantined-test-${{ matrix.java }}

      - name: JUnit Tests
        id: junit-test
        uses: ./.github/actions/run-gradle
        with:
          test-task: test
          timeout-minutes: 180  # 3 hours
          test-catalog-path: missing.txt
          build-scan-artifact-name: build-scan-test-${{ matrix.java }}

      - name: Archive JUnit HTML reports
        uses: actions/upload-artifact@v4
        id: junit-upload-artifact
        with:
          name: junit-reports-${{ matrix.java }}
          path: |
            **/build/reports/tests/*
          compression-level: 9
          if-no-files-found: ignore

      - name: Archive JUnit XML
        uses: actions/upload-artifact@v4
        with:
          name: junit-xml-${{ matrix.java }}
          path: |
            build/junit-xml/**/*.xml
          compression-level: 9
          if-no-files-found: ignore

      - name: Archive Thread Dumps
        id: thread-dump-upload-artifact
        if: always() && (steps.junit-test.outputs.gradle-exitcode == '124' || steps.junit-quarantined-test.outputs.gradle-exitcode == '124')
        uses: actions/upload-artifact@v4
        with:
          name: junit-thread-dumps-${{ matrix.java }}
          path: |
            thread-dumps/*
          compression-level: 9
          if-no-files-found: ignore

      - name: Parse JUnit tests
        run: python .github/scripts/junit.py --export-test-catalog ./test-catalog >> $GITHUB_STEP_SUMMARY
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
          JUNIT_REPORT_URL: ${{ steps.junit-upload-artifact.outputs.artifact-url }}
          THREAD_DUMP_URL: ${{ steps.thread-dump-upload-artifact.outputs.artifact-url }}
          GRADLE_TEST_EXIT_CODE: ${{ steps.junit-test.outputs.gradle-exitcode }}
          GRADLE_QUARANTINED_TEST_EXIT_CODE: ${{ steps.junit-quarantined-test.outputs.gradle-exitcode }}
